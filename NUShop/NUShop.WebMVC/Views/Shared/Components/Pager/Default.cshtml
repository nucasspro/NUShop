@using NUShop.Utilities.DTOs
@model PagedResultBase
@{
    var urlTemplate = Url.Action() + "?pageIndex={0}";
    var request = ViewContext.HttpContext.Request;
    foreach (var key in request.Query.Keys)
    {
        if (key == "pageIndex")
        {
            continue;
        }

        urlTemplate += "&" + key + "=" + request.Query[key];
    }

    var startIndex = Math.Max(Model.CurrentPage - 5, 1);
    var finishIndex = Math.Min(Model.CurrentPage + 5, Model.PageCount);
}
<div class="toolbar">
    <div class="row">
        <div class="col-sm-6 text-left">
            @if (Model.PageCount > 1)
            {
                <ul class="pagination">
                    @if (Model.CurrentPage != startIndex)
                    {
                        <li>
                            <a href="@urlTemplate.Replace("{0}", Model.PageCount.ToString())">
                                <i class="fa fa-angle-left"></i>
                            </a>
                        </li>
                    }

                    @for (int i = startIndex; i < finishIndex; i++)
                    {
                        if (i == Model.CurrentPage)
                        {
                            <li class="active"><span>@(i)</span></li>
                        }
                        else
                        {
                            <li><a href="@urlTemplate.Replace("{0}", i.ToString())">@(i)</a></li>
                        }
                    }
                    @if (Model.CurrentPage != finishIndex)
                    {
                            <li>
                                <a href="@urlTemplate.Replace("{0}", Model.PageCount.ToString())">
                                    <i class="fa fa-angle-right"></i>
                                </a>
                            </li>
                    }
                   
                </ul>
            }
        </div>
        <div class="col-sm-6 text-right">Showing @(Model.FirstRowOnPage) to @(Model.LastRowOnPage) of @(Model.RowCount) (@(Model.PageCount) Pages)</div>
    </div>
</div>